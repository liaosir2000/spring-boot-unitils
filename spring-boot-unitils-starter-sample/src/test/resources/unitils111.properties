
unitils.modules=database,dbunit,springBoot
unitils.module.springBoot.className=com.unitils.boot.SpringBootModule
unitils.module.springBoot.runAfter=database
unitils.module.springBoot.enabled=true
#自扩展模块
unitils.module.dbunit.className=org.unitils.dbunit.DbUnitModule
############################################################################
### Database模块相应配置 ###
############################################################################
## Full qualified class name of an implementation of org.unitils.database.datasource.DataSourceFactory. This class is used
# to provide a DataSource for all database unit tests and for the DBMaintainer.
org.unitils.database.datasource.DataSourceFactory.implClassName=org.unitils.database.datasource.impl.DefaultDataSourceFactory
#数据库事务类型
#可选：commit/rollback/disanled
database.default.transaction.mode=commit
## 测试数据库
# 此数据库驱动类型
database.driverClassName=com.mysql.jdbc.Driver
# 此数据库连接信息
database.url=jdbc:mysql://127.0.0.1/test
# 此数据库连接用户名
database.userName=root
# 此数据库连接用户密码
database.password=12345678
# 此数据库连接的schema
database.schemaNames=test
# 此数据库数据库类型：oracle/mysql/postgres等
database.dialect=mysql
# 不同数据库对应的实现
# Fully qualified classnames of the different, dbms specific implementations of org.dbmaintain.database.Database.implClassName
org.dbmaintain.database.Database.implClassName.oracle=org.dbmaintain.database.impl.OracleDatabase
org.dbmaintain.database.Database.implClassName.mysql=org.dbmaintain.database.impl.MySqlDatabase
# 是否支持初数据库始化脚本，默认关闭（可以通过脚本每次重建数据库等）
# The database maintainer is disabled by default.
updateDataBaseSchema.enabled=true
#This table is by default not created automatically
dbMaintainer.autoCreateExecutedScriptsTable=true
# Indicates whether a from scratch update should be performed when the previous update failed, but
# none of the scripts were modified since that last update. If false a new update will be tried only when
# changes were made to the script files.
dbMaintainer.keepRetryingAfterError.enabled=true
dbMaintainer.script.locations=
############################################################################
### Database模块相应配置 ###
############################################################################
# Dbunit中DataSet和ExpectedDataSet的数据准备实现类，（也可以用Excel准备数据，需要替换实现类）
DbUnitModule.DataSet.factory.default=com.unitils.boot.xls.MultiSchemaXlsDataSetFactory
DbUnitModule.ExpectedDataSet.factory.default=com.unitils.boot.xls.MultiSchemaXlsDataSetFactory

org.dbunit.database.IMetadataHandler.implClassName=org.dbunit.ext.mysql.MySqlMetadataHandler
## Dbunit中测试数据处理策略
# CleanInsertLoadStrategy：先删除dateSet中有关表的数据，然后再插入数据。
# InsertLoadStrategy：只插入数据。
# RefreshLoadStrategy：有同样key的数据更新，没有的插入。
# UpdateLoadStrategy： 有同样key的数据更新，没有的不做任何操作。
DbUnitModule.DataSet.loadStrategy.default=org.unitils.dbunit.datasetloadstrategy.impl.CleanInsertLoadStrategy
# XSD generator
dataSetStructureGenerator.xsd.dirName=/tmp/resources/xsd

SpringModule.applicationContextFactory.implClassName=com.unitils.boot.util.SpringBootApplicationContextFactory